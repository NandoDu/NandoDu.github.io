<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>网络爬虫入门</title>
      <link href="/2020/04/29/crawler/"/>
      <url>/2020/04/29/crawler/</url>
      
        <content type="html"><![CDATA[<p>学习爬虫的契机是小程序后端开发拟用这样的技术，我在这里简单整理一些爬虫的使用方法，方便以后使用的时候查阅。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>python环境配置</li><li>pycharm IDE</li><li>requests库的安装</li></ul><h2 id="Requests库的安装"><a href="#Requests库的安装" class="headerlink" title="Requests库的安装"></a>Requests库的安装</h2><p>&emsp;&emsp;以管理员的身份运行命令行，输入命令：</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;然后进入IDE通过简单的代码验证requests是否安装成功（这里我们打开的是IDE中的python console进行模拟运行）：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.status_code</span><br><span class="line"><span class="number">200</span>  // 出现<span class="number">200</span>代表连接成功</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.encoding = <span class="string">'utf-8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line">(此处应显示百度的网页内容)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;经过这样简单的验证，我们的requests库就安装成功了。</p><blockquote><p>当我们使用pycharm作为网络爬虫的IDE时，有时我们把r.encoding设置成utf-8后，依然出现乱码，这个时候我们要打开pycharm的File-&gt;Settings-&gt;Editor-&gt;File Encodings，更改Global Encoding和Project Encoding为utf-8，并在Path中添加当前py文件，设置编码为utf-8，修改Default encoding for properties files为utf-8，此时便可以解决我们的乱码问题。</p></blockquote><h2 id="Requests库的get-方法"><a href="#Requests库的get-方法" class="headerlink" title="Requests库的get()方法"></a>Requests库的get()方法</h2><p>&emsp;&emsp;下面我们来分析前面一段给出的代码。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">r = requests.get(url)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;此处的requests.get(url)相当于我们创建了一个Requests对象，r相当于创建了一个Response对象，get方法用来对应HTML的get。</p><p>&emsp;&emsp;Response对象有如下常用属性：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">r.status_code:       HTTP请求的返回状态，200表示连接成功，404表示失败</span><br><span class="line">r.text:              HTTP相应内容的字符串形式，即url对应的页面内容</span><br><span class="line">r.encoding:          从HTTP header中猜测的响应内容编码方式</span><br><span class="line">r.apparent_encoding: 从内容中分析出的响应内容编码方式（备选编码方式）</span><br><span class="line">r.content:           HTTP响应内容的二进制形式</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;注意，如果header中不存在charset，则认为编码为ISO-8859-1，所以我们常常需要更改r.encoding，来使我们得到的内容中的汉字得到正确的编码。</p><h2 id="爬取网页的通用代码框架"><a href="#爬取网页的通用代码框架" class="headerlink" title="爬取网页的通用代码框架"></a>爬取网页的通用代码框架</h2><p>&emsp;&emsp;首先，我们要理解Requests库的异常：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">requests.ConnectionError:  网络连接错误异常，如DNS查询失败、拒绝连接等</span><br><span class="line">requests.HTTPError:        HTTP错误异常</span><br><span class="line">requests.URLRequired:      URL缺失异常</span><br><span class="line">requests.TooManyRedirects: 超过最大重定向次数，产生重定向异常</span><br><span class="line">requests.ConnectTimeout:   连接远程服务器超时异常</span><br><span class="line">requests.Timeout:          请求URL超时，产生超时异常</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;接着，我们要理解Response库的异常：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">r.raise_for_status(): 如果不是200，产生异常requests.HTTPError</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;下面我们给出爬取网页的通用代码框架：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout = <span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"产生异常"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    url = <span class="string">"http://www.baidu.com"</span></span><br><span class="line">    print(getHTMLText(url))</span><br></pre></td></tr></table></figure><h2 id="Requests库的主要方法"><a href="#Requests库的主要方法" class="headerlink" title="Requests库的主要方法"></a>Requests库的主要方法</h2><p>&emsp;&emsp;Requests库有7个主要方法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">requests.request(): 构造一个请求，支撑以下各方法的基础方法</span><br><span class="line">requests.get():     获取HTML网页的主要方法，对应于HTTP的GET</span><br><span class="line">requests.head():    获取HTML网页头信息的方法，对应于HTTP的HEAD</span><br><span class="line">requests.post():    向HTML网页提交POST请求的方法，对应于HTTP的POST</span><br><span class="line">requests.put():     向HTML网页提交PUT请求的方法，对应于HTTP的PUT</span><br><span class="line">requests.patch():   向HTML网页提交局部修改请求，对应于HTTP的PATCH</span><br><span class="line">requests.delete():  向HTML页面提交删除请求，对应于HTTP的DELETE</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;对应的HTTP协议对资源有6种操作：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET:    请求获取URL位置的资源</span><br><span class="line">HEAD:   请求获取URL位置资源的响应消息报告，即获得该资源的头部信息</span><br><span class="line">POST:   请求向URL位置的资源后附加新的数据</span><br><span class="line">PUT:    请求向URL位置存储一个资源，覆盖原URL位置的资源</span><br><span class="line">PATCH:  请求局部更新URL位置的资源，即改变该处资源的部分内容</span><br><span class="line">DELETE: 请求删除URL位置存储的资源</span><br></pre></td></tr></table></figure><h2 id="Requests库主要方法解析"><a href="#Requests库主要方法解析" class="headerlink" title="Requests库主要方法解析"></a>Requests库主要方法解析</h2><p>&emsp;&emsp;<strong>requests.request(method, url, **kwargs)</strong></p><p>&emsp;&emsp;**kwargs: 控制访问的参数，均为可选项</p><p>&emsp;&emsp;  params: 字典或字节序列，作为参数增加到url中</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'GET'</span>, <span class="string">'http://python123.io/ws'</span>, params=kv)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.url)</span><br><span class="line">http://python123.io/ws?key1=value1&amp;key2=value2</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;data: 字典、字节序列或文件对象，作为Request的内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, data=kv)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>body = <span class="string">'主体内容'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, data=body)</span><br></pre></td></tr></table></figure><blockquote><p>此时，kv的内容不会加到url里，而是会加到url对应链接的内容中。</p></blockquote><p>&emsp;&emsp;json: JSON格式的数据，作为Request的内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>kv = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, json=kv)</span><br></pre></td></tr></table></figure><blockquote><p>此时，kv的内容会加到url对应的json文件中</p></blockquote><p>&emsp;&emsp;headers: 字典，HTTP定制头</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>hd = &#123;<span class="string">'user-agent'</span>: <span class="string">'Chrome/10'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, headers=hd)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;cookies: 字典或CookieJar，Request中的cookie</p><p>&emsp;&emsp;auth: 元组，支持HTTP认证功能</p><p>&emsp;&emsp;files: 字典类型，传输文件</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fs = &#123;<span class="string">'file'</span>: open(<span class="string">'data.xls'</span>, <span class="string">'rb'</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'POST'</span>, <span class="string">'http://python123.io/ws'</span>, files=fs)</span><br></pre></td></tr></table></figure><blockquote><p>用于向url对应的链接提供文件</p></blockquote><p>&emsp;&emsp;timeout: 设定超时时间，秒为单位</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'GET'</span>, <span class="string">'http://www.baidu.com'</span>, timeout=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;proxies: 字典认证，设定访问代理服务器，可以增加登录认证</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>pxs = &#123;<span class="string">'http'</span>: <span class="string">'http://user:pass@10.10.1:1234'</span></span><br><span class="line">           <span class="string">'https'</span>: <span class="string">'https://10.10.10.1:4321'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.request(<span class="string">'GET'</span>, <span class="string">'http://www.baidu.com'</span>, proxies=pxs)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;allow_redirects: True/False，默认为True，重定向开关</p><p>&emsp;&emsp;stream: True/False，默认为True，获取内容立即下载开关</p><p>&emsp;&emsp;verify: True/False，默认为True，认证SSL证书开关</p><p>&emsp;&emsp;cert: 本地SSL证书路径</p><h2 id="网络爬虫引发的问题"><a href="#网络爬虫引发的问题" class="headerlink" title="网络爬虫引发的问题"></a>网络爬虫引发的问题</h2><h3 id="网络爬虫的尺寸"><a href="#网络爬虫的尺寸" class="headerlink" title="网络爬虫的尺寸"></a>网络爬虫的尺寸</h3><ul><li><p>爬取网页，玩转网页：小规模，数据量小，爬取速度不敏感（Requests库）</p></li><li><p>爬取网站，爬取系列网站：中规模，数据规模较大，爬取速度敏感（Scrapy库）</p></li><li><p>爬取全网： 大规模，搜索引擎，爬取速度关键（定制开发）</p></li></ul><h3 id="网络爬虫引发的问题-1"><a href="#网络爬虫引发的问题-1" class="headerlink" title="网络爬虫引发的问题"></a>网络爬虫引发的问题</h3><ul><li><p>骚扰问题</p></li><li><p>法律风险</p></li><li><p>隐私泄露</p></li></ul><h3 id="网络爬虫的限制"><a href="#网络爬虫的限制" class="headerlink" title="网络爬虫的限制"></a>网络爬虫的限制</h3><h4 id="来源审查：判断User-Agent进行限制"><a href="#来源审查：判断User-Agent进行限制" class="headerlink" title="来源审查：判断User-Agent进行限制"></a>来源审查：判断User-Agent进行限制</h4><ul><li>检查来访HTTP协议头的User-Agent域，只响应浏览器或友好爬虫的访问</li></ul><h4 id="发布公告：Robots协议"><a href="#发布公告：Robots协议" class="headerlink" title="发布公告：Robots协议"></a>发布公告：Robots协议</h4><ul><li>告知所有爬虫网站的爬取策略，要求爬虫遵守</li></ul><h2 id="Robots协议"><a href="#Robots协议" class="headerlink" title="Robots协议"></a>Robots协议</h2><ul><li><p>作用：网站告知网络爬虫哪些页面可以爬取，哪些不行</p></li><li><p>形式：在网站根目录下的robots.txt文件</p></li></ul><h2 id="Robots协议的使用"><a href="#Robots协议的使用" class="headerlink" title="Robots协议的使用"></a>Robots协议的使用</h2><ul><li><p>网络爬虫：自动或人工识别robots.txt，再进行内容爬取</p></li><li><p>约束性：Robots协议是建议但非约束性，网络爬虫可以不遵守，但存在法律风险</p></li><li><p><strong>类人行为可不参考Robots协议</strong></p></li></ul><h2 id="访问亚马逊商品页面实例"><a href="#访问亚马逊商品页面实例" class="headerlink" title="访问亚马逊商品页面实例"></a>访问亚马逊商品页面实例</h2><p>&emsp;&emsp;我们在按照前述模板访问亚马逊页面时，会出现503的访问错误，其中一个可能的原因，就是我们用于访问的headers不被亚马逊接受。此时，我们通过前面介绍的headers参数修改，可达到爬取商品信息的目的：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"https://www.amazon.cn/dp/B07TTR34CQ?ref_=Oct_DLandingS_D_5d921679_60&amp;smid=A26HDXW89ZT98L"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0'</span>&#125;  // 模拟浏览器访问</span><br><span class="line">    r = requests.get(url, headers = kv)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(r.text[<span class="number">1000</span>:<span class="number">2000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><h2 id="百度搜索关键词提交实例"><a href="#百度搜索关键词提交实例" class="headerlink" title="百度搜索关键词提交实例"></a>百度搜索关键词提交实例</h2><p>&emsp;&emsp;百度关键词搜索有着固定的地址格式，即”<a href="http://www.baidu.com/s?wd=keyword&quot;，我们可以通过Requests库来实现关键词的提交：" target="_blank" rel="noopener">http://www.baidu.com/s?wd=keyword&quot;，我们可以通过Requests库来实现关键词的提交：</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">keyword = <span class="string">"Python"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">'wd'</span>: keyword&#125;</span><br><span class="line">    r = requests.get(<span class="string">"http://www.baidu.com/s"</span>, params=kv)</span><br><span class="line">    print(r.request.url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    print(len(r.text))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><h2 id="Beautiful-Soup库的安装"><a href="#Beautiful-Soup库的安装" class="headerlink" title="Beautiful Soup库的安装"></a>Beautiful Soup库的安装</h2><p>&emsp;&emsp;以管理员的身份运行命令行，输入命令：</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip install beautifulsoup4</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;然后我们验证BeautifulSoup库安装成功：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.status_code</span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.encoding = r.apparent_encoding</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line">(百度页面内容)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo = r.text</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>soup = BeautifulSoup(demo, <span class="string">"html.parser"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(soup)</span><br><span class="line">(解析后内容)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开发微信小程序（四）</title>
      <link href="/2020/04/26/wechat4/"/>
      <url>/2020/04/26/wechat4/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;上一章我们从页面的实战开发角度讲解了前端代码编写的一些技巧，本章我们继续探讨小程序前端页面开发的技巧与应避开的大坑。（是的，我踩了一个很大的坑，到现在才发现）</p><h2 id="（划重点！划重点！划重点！）view-布局"><a href="#（划重点！划重点！划重点！）view-布局" class="headerlink" title="（划重点！划重点！划重点！）view 布局"></a><strong>（划重点！划重点！划重点！）view 布局</strong></h2><p>&emsp;&emsp;说真的，对于初学者来说，view布局这一块在网上查来查去就是弹性盒子、flex、弹性盒子、flex……反复横跳，我昨天查了一晚上怎么让文字在图片的右侧靠右显示（前提是文字在图片上方），答案无一不是float、right、float、right……反复横跳。那么我就从实际应用的角度来介绍两个常用的view布局。</p><h3 id="弹性盒子布局"><a href="#弹性盒子布局" class="headerlink" title="弹性盒子布局"></a>弹性盒子布局</h3><p>&emsp;&emsp;因网上关于这个的资料太多，此处只说优点和缺点。</p><p>&emsp;&emsp;优点：</p><ul><li><p>简单方便，快速对齐，快速布局</p></li><li><p>网上资料多，可借鉴代码多</p></li></ul><p>&emsp;&emsp;缺点：</p><ul><li><p>灵活性太差，尤其是对初学者而言（比如我）</p></li><li><p>margin调整位置受前一个view的影响</p></li><li><p>很难做到横向对齐的同时纵向对齐（即，很难做到横向弹性盒子和纵向弹性盒子同时设置）</p></li></ul><h3 id="自由布局"><a href="#自由布局" class="headerlink" title="自由布局"></a>自由布局</h3><p>&emsp;&emsp;对外层view不声明flex，内层位置的调节只靠margin-top和margin-left，小程序对右对齐的适配性极差（个人观点），因此能以左边框为基准就不以右边框为基准。</p><h2 id="实现qq列表下拉功能代码模板"><a href="#实现qq列表下拉功能代码模板" class="headerlink" title="实现qq列表下拉功能代码模板"></a><strong>实现qq列表下拉功能代码模板</strong></h2><p>&emsp;&emsp;多层嵌套渲染列表与列表展开/收起的应用，类似开发可直接借鉴下述模板。</p><p>&emsp;&emsp;.wxml文件代码模板：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'pagename'</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  // 下拉条列表渲染逻辑（第一层列表）</span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for-items</span> = <span class="string">"&#123;&#123;missionInfoData&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">"bar"</span> <span class="attr">bindtap</span> = <span class="string">'toggleBtn'</span> <span class="attr">id</span>=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span> = <span class="string">'barimage &#123;&#123;item.id &gt; 0?"":"hidden"&#125;&#125;'</span> <span class="attr">src</span>=<span class="string">'&#123;&#123;item.imgurl&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span> = <span class="string">'barimage &#123;&#123;item.id &gt; 0?"hidden":""&#125;&#125;'</span> <span class="attr">src</span>=<span class="string">'&#123;&#123;item.imgurl1&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'barinfo'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'barname'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;item.barname&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'barnum'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;item.barnum&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">text</span>&gt;</span>/<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;item.barNum&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    //下拉内容列表渲染逻辑（第二层列表）</span><br><span class="line">    <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for-items</span> = <span class="string">"&#123;&#123;item.content&#125;&#125;"</span> <span class="attr">wx:for-item</span> = <span class="string">"content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">"mission &#123;&#123;item.id &gt; 0?'hidden':''&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'timeimageview'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span> = <span class="string">'timeimage'</span> <span class="attr">src</span>=<span class="string">'/icons/resttime.png'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'timetextview'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span> = <span class="string">'timetextnum'</span>&gt;</span>&#123;&#123;content.day&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">text</span>&gt;</span>天<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'missionnameview'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'missionnameview1'</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;content.name&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'missionnameview2'</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;content.type&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'stateview'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span> = <span class="string">'stateimage'</span> <span class="attr">src</span>=<span class="string">'&#123;&#123;content.statecolor&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;.js文件代码模板:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    missionInfoData: []</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> data = &#123;</span><br><span class="line">      <span class="string">"datas"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"id"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="string">"imgurl"</span>: <span class="string">"/images/ingbar.png"</span>,</span><br><span class="line">          <span class="string">"imgurl1"</span>: <span class="string">"/images/ingbar1.png"</span>,</span><br><span class="line">          <span class="string">"barname"</span>: <span class="string">"在读图书"</span>,</span><br><span class="line">          <span class="string">"barnum"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="string">"barNum"</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="string">"content"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              day: <span class="number">20</span>,</span><br><span class="line">              name: <span class="string">"小程序入门"</span>,</span><br><span class="line">              type: <span class="string">"计算机"</span>,</span><br><span class="line">              statecolor: <span class="string">"/icons/lamp.png"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              day: <span class="number">10</span>,</span><br><span class="line">              name: <span class="string">"小程序实战"</span>,</span><br><span class="line">              type: <span class="string">"计算机"</span>,</span><br><span class="line">              statecolor: <span class="string">"/icons/lamp.png"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              day: <span class="number">30</span>,</span><br><span class="line">              name: <span class="string">"资本论"</span>,</span><br><span class="line">              type: <span class="string">"经济学"</span>,</span><br><span class="line">              statecolor: <span class="string">"/icons/lamp1.png"</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"id"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="string">"imgurl"</span>: <span class="string">"/images/ingbar.png"</span>,</span><br><span class="line">          <span class="string">"imgurl1"</span>: <span class="string">"/images/ingbar1.png"</span>,</span><br><span class="line">          <span class="string">"barname"</span>: <span class="string">"在阅资源"</span>,</span><br><span class="line">          <span class="string">"barnum"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="string">"barNum"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="string">"content"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              day: <span class="number">15</span>,</span><br><span class="line">              name: <span class="string">"概率论.pdf"</span>,</span><br><span class="line">              type: <span class="string">"数学"</span>,</span><br><span class="line">              statecolor: <span class="string">"/icons/lamp.png"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              day: <span class="number">20</span>,</span><br><span class="line">              name: <span class="string">"计算机网络.pdf"</span>,</span><br><span class="line">              type: <span class="string">"计算机"</span>,</span><br><span class="line">              statecolor: <span class="string">"/icons/lamp.png"</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"id"</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="string">"imgurl"</span>: <span class="string">"/images/ingbar.png"</span>,</span><br><span class="line">          <span class="string">"imgurl1"</span>: <span class="string">"/images/ingbar1.png"</span>,</span><br><span class="line">          <span class="string">"barname"</span>: <span class="string">"当前竞赛"</span>,</span><br><span class="line">          <span class="string">"barnum"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="string">"barNum"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="string">"content"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              day: <span class="number">35</span>,</span><br><span class="line">              name: <span class="string">"高校小程序开发大赛"</span>,</span><br><span class="line">              type: <span class="string">"应用比赛"</span>,</span><br><span class="line">              statecolor: <span class="string">"/icons/lamp.png"</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">      missionInfoData: data.datas</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 实现各列表展开独立进行，也可设置全局变量实现唯一列表展开</span></span><br><span class="line">  toggleBtn: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">var</span> itemId = event.currentTarget.id;</span><br><span class="line">    <span class="keyword">if</span>(itemId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      itemId = -itemId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不这样处理的话会报错</span></span><br><span class="line">    <span class="keyword">var</span> up = <span class="string">"missionInfoData["</span> + (itemId - <span class="number">1</span>) + <span class="string">"].id"</span>;</span><br><span class="line">    <span class="keyword">var</span> resId = -event.currentTarget.id;</span><br><span class="line">    that.setData (&#123;</span><br><span class="line">      [up]: resId</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;.wxss文件代码模板：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.topInfo</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.topImage1</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.topImage2</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">630</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.barimage</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.barname</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">70</span>rpx;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">78</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.barinfo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.barnum</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">margin-left</span>:<span class="number">675</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mission</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: whitesmoke;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.missionnameview</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">230</span>rpx;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">120</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.missionnameview1</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.missionnameview2</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.timeimageview</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.timeimage</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">10</span>rpx;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">30</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.timetextview</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">50</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stateview</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">683</span>rpx;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stateimage</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 显示/隐藏属性</span><br><span class="line"><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开发微信小程序（三）</title>
      <link href="/2020/04/22/wechat3/"/>
      <url>/2020/04/22/wechat3/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;本章节将以一个具体的小程序界面为例，介绍前端页面开发的知识和技巧，前面几章讲过的内容将不再赘述。</p><h2 id="绘制界面原型"><a href="#绘制界面原型" class="headerlink" title="绘制界面原型"></a><strong>绘制界面原型</strong></h2><p>&emsp;&emsp;在绘制界面原型之前，我们需要先以文档的形式，将页面功能点陈列出来，此处省略这一步骤，直接进入界面原型设计的讲解。</p><h3 id="绘制工具"><a href="#绘制工具" class="headerlink" title="绘制工具"></a>绘制工具</h3><p>&emsp;&emsp;界面原型设计的工具因人而异，我采用的是Photoshop，特点就是麻烦，对，因为当时不知道<a href="https://modao.cc/downloads" target="_blank" rel="noopener">墨刀</a>之类的专业界面原型设计工具。</p><h3 id="绘制要点（偏向于Ps）"><a href="#绘制要点（偏向于Ps）" class="headerlink" title="绘制要点（偏向于Ps）"></a>绘制要点（偏向于Ps）</h3><ul><li><p>界面原型设计力求一步到位（否则就可能像我一样，反反复复重写.wxss文件）</p></li><li><p>多参考好的界面设计，集大成</p></li><li><p>Ps一定要保存原有图层</p></li><li><p>Ps导出.png图片时，如果是对已有图案的修改，直接覆盖，避免同类图片冗余</p></li><li><p>大量的矢量图标都不需要自己绘制（这也是血的教训，自己画的图标又不标准又耗时），登录 <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a> 进行搜索下载</p></li><li><p>一般的界面设计都能通过编程实现，只有难易之分，所以设计时不要顾虑太多后期的实现策略（但是动态背景或者听起来就比较高级的还是先放一放，开发前期还是着力搭建框架）</p></li><li><p>界面原型设计的画布采用与微信开发小程序预览界面相同像素大小，对于之后的编程只有好处没有坏处（否则你就只能像我一样，疯狂修改.wxss里的数据，一次次地真机调试，浪费了大量时间）</p></li></ul><h2 id="界面前端编程"><a href="#界面前端编程" class="headerlink" title="界面前端编程"></a><strong>界面前端编程</strong></h2><p>&emsp;&emsp;新建界面的要点在上一章已经讲得很清楚，我们从已经初始化页面配置开始讲起。</p><h3 id="设置页面背景"><a href="#设置页面背景" class="headerlink" title="设置页面背景"></a>设置页面背景</h3><h4 id="1-修改背景颜色"><a href="#1-修改背景颜色" class="headerlink" title="1. 修改背景颜色"></a>1. 修改背景颜色</h4><p>&emsp;&emsp;小程序页面默认背景颜色是白色，如果我们要改变当前页面的背景色，打开newpage.wxss进行修改：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">page</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: whitesmoke;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;小程序支持两种颜色代码，一种是图示的颜色英文名称，另一种是十六进制代码，使用Ps的同学可以直接在Ps调色板中获取到所需颜色的十六进制代码。</p><h4 id="2-修改背景图片"><a href="#2-修改背景图片" class="headerlink" title="2. 修改背景图片"></a>2. 修改背景图片</h4><p>&emsp;&emsp;小程序背景图片的添加有些特殊，本地的图片一般是不能直接作为背景图片，当我们添加了本地图片作为背景时，图片无法显示，以及会出现如下报错：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pages&#x2F;newpage&#x2F;newpage.wxss 中的本地资源图片无法通过 WXSS 获取，可以使用网络图片，或者 base64，或者使用&lt;image&#x2F;&gt;标签。请参考文档：https:&#x2F;&#x2F;developers.weixin.qq.com&#x2F;miniprogram&#x2F;dev&#x2F;qa.html#%E6%9C%AC%E5%9C%B0%E8%B5%84%E6%BA%90%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87-wxss-%E8%8E%B7%E5%8F%96</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;对于这种情况，最好的解决办法是将本地图片上传到oss，获取图片的url，写入.wxss中，但是如果我们坚持使用本地图片，则需要在.js文件中输入：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//把base64转换成图片</span></span><br><span class="line">  getBase64ImageUrl(data) &#123;</span><br><span class="line">    <span class="comment">// 获取到base64Data</span></span><br><span class="line">    <span class="keyword">var</span> base64Data = data;</span><br><span class="line">    <span class="comment">/// 通过微信小程序自带方法将base64转为二进制去除特殊符号，再转回base64</span></span><br><span class="line">    base64Data = wx.arrayBufferToBase64(wx.base64ToArrayBuffer(base64Data));</span><br><span class="line">    <span class="comment">/// 拼接请求头，data格式可以为image/png或者image/jpeg等，看需求</span></span><br><span class="line">    <span class="keyword">const</span> base64ImgUrl = <span class="string">"data:image/png;base64,"</span> + base64Data;</span><br><span class="line">    <span class="comment">/// 刷新数据</span></span><br><span class="line">    <span class="comment">// console.log(base64ImgUrl)</span></span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      baseImgUrl:base64ImgUrl</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这样就能将我们的本地图片转化成base64，判断成功的依据是，重新编译时出现弹窗，选中我们的背景图片，系统会自动生成一段编码（非常非常长），这时将我们原背景图片地址替换成这段编码，即可显示在我们的小程序中。（但是我后来在用的时候发现有的时候没有弹窗也没有报错，实在是不推荐这种方式）</p><h4 id="3-设置多层次的页面背景"><a href="#3-设置多层次的页面背景" class="headerlink" title="3. 设置多层次的页面背景"></a>3. 设置多层次的页面背景</h4><p>&emsp;&emsp;有时，我们并不想页面呈现一个简单的图片，而是希望多种图片叠加在一起，形成组合样式，那么我们将要用到view这一工具来实现我们的想法，在.wxml文件中输入下述代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'page'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'image1'</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'image2'</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里我们只是简单构建了三个view，外层view和内层的两个view，内层的两个view用来装我们的图片，外层view用来控制内层view的分布。在.wxss文件中输入下述代码：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.image1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.image2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这时我们会看到背景中出现一蓝一红矩形框，两个矩形框大小相同，纵向分布。对于两个矩形的布局可参考前一章讲的弹性盒子布局，而如果我们想要实现下方的红色矩形框覆盖一部分上方的蓝色矩形框，可通过margin这一利器实现：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.image1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.image2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">100</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;我们将会看到红色矩形框向上移动了100rpx。对于参数的调节，我建议初学者多调多试，在不了解页面属性的时候，通过简单的改变数值来得到自己想要的效果。</p><blockquote><p>这里需要特别强调的一点是，我们在页面布局时，如果是纵向布局，我们应采用横向开发，即调整好当前行的内容及样式后，再进行下一行的开发。我踩的一个大坑就是急于布局，将纵向框架搭好然后填充内容，结果填充的时候发现预留尺寸出现问题，当然如果前期界面原型设计准确的话，也可以采用先搭整体框架再开发的方法。</p></blockquote><h3 id="设置元素样式"><a href="#设置元素样式" class="headerlink" title="设置元素样式"></a>设置元素样式</h3><h4 id="1-元素样式基本配置"><a href="#1-元素样式基本配置" class="headerlink" title="1. 元素样式基本配置"></a>1. 元素样式基本配置</h4><p>&emsp;&emsp;为什么这一章会单独提一下这个问题，是因为我在开发过程中总是会无意地漏掉一些元素的基本属性配置，导致出现不期的效果，而迟迟找不到原因，浪费了很多时间。对于内层view元素（即view中不再嵌套view），我们通常需要如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.image2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;尤其需要注意我们要优先设置元素的宽和高，比如我前面举的红蓝矩形块的例子，如果不设置宽高，就会看不到颜色块。另外，对于文字以及图片独有的样式配置，不在此赘述，有需要的样式在网上查找资料就好了。而对于外层view元素（即view中嵌套view），我们通常需要如下样式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.pageid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  overflow: hidden;  // 设置图片样式时需注意</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;尤其需要注意，这些属性的配置我虽然在上一章写过，但是整体大小（height）的配置仍然是很容易被忽略掉的。</p><h4 id="2-美化元素样式"><a href="#2-美化元素样式" class="headerlink" title="2. 美化元素样式"></a>2. 美化元素样式</h4><p>&emsp;&emsp;元素样式的美化通常是通过设置css属性，但对于初学者而言，对css属性设置了解较少，以及对多种属性搭配的效果把握不好，因此我建议很多看似需要多重view嵌套的部分可以直接用Ps封装代替。</p><p>&emsp;&emsp;比如我们需要实现一个按钮，那么按钮大概有以下几种样式需要实现：未按按钮时按钮的文字样式和背景图片样式，按了按钮之后的文字样式和背景图片样式，文字样式和背景图片样式的布局。那么对于按钮这种固定样式，我们最好采用贴图的方式，在Ps中直接绘制未按和已按的两种按钮样式，并保留图片原格式以及导出.png文件，加载到小程序页面中。注意，小程序是支持image标签直接引用本地图片的，这一点要和背景图片区分。</p><p>&emsp;&emsp;再比如我们要实现某种特殊字体，导入字体包固然是一种方式，但如果是仅改变标题或者一些固定出现的字的话，也可以考虑采用Ps贴图的方式快速实现。</p><h4 id="3-元素显示与隐藏"><a href="#3-元素显示与隐藏" class="headerlink" title="3. 元素显示与隐藏"></a>3. 元素显示与隐藏</h4><p>&emsp;&emsp;元素的显示与隐藏是小程序前端开发的核心知识，对于初学者的开发很有用处。我们在实现页面跳转的时候，很多时候是当前页面跳到当前页面，也就是说，我们只希望当前页面的一些部分发生变化，而页面本身还是原来的页面。那此时我们需要搞明白变化的到底是什么，其实是view的替换。举前面红蓝矩形块的例子，我们希望点击红色矩形块，下方的蓝色矩形块变成一个绿色的圆。那么我们其实原本就有三个view元素，红色矩形块、蓝色矩形块、绿色的圆，只是我们未点击红色矩形块时，蓝色矩形块显示，绿色圆隐藏；点击之后，蓝色矩形块隐藏，绿色圆显示。关于这一块内容，我将在以后的章节中详细讲解，此处我只给出网上查找的实例代码，初学者可以通过模仿代码结构来实现自己想要的效果：</p><p>.wxml文件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"switch-type"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"btn &#123;&#123;currentSelectTripType == 'pinche' ? 'active' : ''&#125;&#125;"</span> <span class="attr">bindtap</span>=<span class="string">'selectedPinche'</span> <span class="attr">data-id</span>=<span class="string">'pinche'</span>&gt;</span>拼车<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"btn &#123;&#123;currentSelectTripType == 'baoche' ? 'active' : ''&#125;&#125;"</span> <span class="attr">bindtap</span>=<span class="string">'selectedBaoche'</span> <span class="attr">data-id</span>=<span class="string">'baoche'</span>&gt;</span>包车<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>.js文件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    currentSelectTripType: <span class="string">'pinche'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 更新data 切换选中状态</span></span><br><span class="line">  selectedPinche: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      currentSelectTripType: e.currentTarget.dataset.id</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  selectedBaoche: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      currentSelectTripType: e.currentTarget.dataset.id</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>.wxss文件</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.switch-type</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.switch-type</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.switch-type</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.switch-type</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#dfdfdf</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10</span>rpx <span class="number">40</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.switch-type</span> <span class="selector-class">.btn</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2</span>rpx solid <span class="number">#007bff</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>原文 <a href="https://www.shiqidu.com/d/469" target="_blank" rel="noopener">https://www.shiqidu.com/d/469</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iDo-wechat</title>
      <link href="/2020/04/18/iDo-wechat/"/>
      <url>/2020/04/18/iDo-wechat/</url>
      
        <content type="html"><![CDATA[<h1 id="iDo-微信小程序介绍文档"><a href="#iDo-微信小程序介绍文档" class="headerlink" title="iDo 微信小程序介绍文档"></a><strong>iDo 微信小程序介绍文档</strong></h1><h2 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h2><p>&emsp;&emsp;进入大学，面对丰富多彩的大学生活，很多同学往往因为突然涌来的大量信息，或是缺少途径了解适合自己的信息，时常会感到茫然。不知道自己从何入手，不知道如何规划自己的大学生活。陷入明明有很多事情可做，却因目标不明确或盲目选择等等原因而贻误了大学学习的宝贵时光。</p><h2 id="项目理念"><a href="#项目理念" class="headerlink" title="项目理念"></a>项目理念</h2><p>&emsp;&emsp;该项目旨在通过提供用户多种可选择的学习目标，帮助用户确立本科期间的长远目标，以及为达到长远目标帮助规划可由用户自主选择的短期目标，并根据设定的目标提供精准的信息，从一本书、一份资料、一场竞赛……开始，及时提醒用户完成一个又一个的短期任务，陪伴用户以梦为马，不负韶华。</p><h2 id="项目定位"><a href="#项目定位" class="headerlink" title="项目定位"></a>项目定位</h2><p>&emsp;&emsp;为大学生更好地完成学业或进一步深造提供强有力的信息支持与目标引领（陪跑小程序）。</p><h3 id="目标人群"><a href="#目标人群" class="headerlink" title="目标人群"></a>目标人群</h3><p>&emsp;&emsp;本科生。</p><h2 id="程序界面"><a href="#程序界面" class="headerlink" title="程序界面"></a>程序界面</h2><h3 id="初始登录授权界面"><a href="#初始登录授权界面" class="headerlink" title="初始登录授权界面"></a>初始登录授权界面</h3><p>&emsp;<img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/icimence/CDN/wechat/login.png"  height=400px title="初始登录授权界面" ></p><h3 id="我的”界面设计"><a href="#我的”界面设计" class="headerlink" title="我的”界面设计"></a>我的”界面设计</h3><p>&emsp;<img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/icimence/CDN/wechat/mine.png"  height=400px title="“我的”界面设计" ></p><h3 id="进行中”界面设计"><a href="#进行中”界面设计" class="headerlink" title="进行中”界面设计"></a>进行中”界面设计</h3><p>&emsp;<img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/icimence/CDN/wechat/running.png"  height=400px title="“进行中”界面设计"></p><h3 id="推荐”界面设计"><a href="#推荐”界面设计" class="headerlink" title="推荐”界面设计"></a>推荐”界面设计</h3><p>&emsp;<img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/icimence/CDN/wechat/home.png"  height=400px title="“推荐”界面设计"></p><blockquote><p>p1: 初始登录授权界面；p2: “我的”界面设计；p3: “进行中”界面设计；p4: “推荐”界面设计</p></blockquote><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="新用户登录"><a href="#新用户登录" class="headerlink" title="新用户登录"></a>新用户登录</h3><ul><li><p>新用户登录显示p1，即初始登录授权界面，开始画面可采用打字机效果，图片中文字仅供参考；</p></li><li><p>登录授权后，进入新人引导阶段（图片未展示），新人引导会向新用户介绍小程序的核心功能：目标制定、信息获取、任务提醒，并引导新用户进入“我的”界面进行目标设定；</p></li><li><p>进入“我的”界面后，初始状态仅显示“添加目标专业”（图片未展示），添加目标专业后（可多选），“我的”界面如p2所示；</p></li><li><p>余下使用说明见“老用户使用”</p></li></ul><h3 id="老用户使用"><a href="#老用户使用" class="headerlink" title="老用户使用"></a>老用户使用</h3><ul><li><p>打开“我的”界面修改当前目标（此步骤可跳过）；</p></li><li><p>打开“推荐”界面，可看到更新的推荐信息，推荐信息由用户制定的目标决定；</p></li><li><p>浏览推荐信息，收藏感兴趣以及对自己有帮助的条目（可在“我的”界面查看）；</p></li><li><p>打开“进行中”界面，添加新任务（“我的”界面紧急任务栏随之更新）</p></li></ul><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><ul><li><p>显示用户使用小程序天数</p></li><li><p>新建/修改目标专业</p></li><li><p>推荐专业相关信息</p></li><li><p>推荐信息分类</p></li><li><p>推荐信息可收藏</p></li><li><p>收藏栏可显示/新建分组</p></li><li><p>新建/完成/搁置/删除任务</p></li><li><p>任务栏分组显示</p></li><li><p>任务栏可新建/删除分组</p></li><li><p>统计板显示完成/搁置/删除数目</p></li><li><p>紧急任务栏显示/修改截止日期最近的任务</p></li><li><p>支持问题反馈</p></li></ul><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ul><li><p>2020/04/16 20:00  <strong>V1.2</strong> 小程序改版，增加更新记录，提供版本号记录。更新用户界面图片加载。</p></li><li><p>2020/04/16 20:36 <strong>V1.2.1</strong> 优化文档结构。</p></li><li><p>2020/04/17 18:43 <strong>V1.2.2</strong> 优化项目理念文字描述。</p></li><li><p>2020/04/17 22:14 <strong>V1.2.3</strong> 优化项目理念文字描述。</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>从零开发微信小程序（二）</title>
      <link href="/2020/04/16/wechat2/"/>
      <url>/2020/04/16/wechat2/</url>
      
        <content type="html"><![CDATA[<p>在上一章节的介绍中，我们已经做好了开发小程序的准备，那么本章将从创建第一个页面开始，逐步讲解小程序的开发过程。</p><h2 id="创建第一个页面"><a href="#创建第一个页面" class="headerlink" title="创建第一个页面"></a><strong>创建第一个页面</strong></h2><ul><li><p>首先，创建一个存放页面的总文件夹pages，并在其中创建第一个页面的文件夹about，在about文件夹中，新建页面所需的四个基本文件.js, .json, .wxml, .wxss.</p></li><li><p>接下来，逐一解决报错问题：</p></li></ul><ol><li>app.json不能为空，且应存放小程序各页面的路径，通过创建名为pages的字符串数组实现</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "pages": ["pages/about/about"]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;&emsp;同理，about.json不能为空，在文件中写入{}即可。</p><ol start="2"><li>about.js中注册about页面对象</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Page(&#123;&#125;)</span><br></pre></td></tr></table></figure><ul><li>至此，第一个页面创建成功，预览界面显示刚创建的空白页面</li></ul><blockquote><p>我们在后续添加新的页面时，也要将文件路径添加到app.json文件中，如果我们希望此时预览的是新建的页面，则将字符串数组中的第一个值设为我们新添加的路径。</p></blockquote><h2 id="配置页面（快速布局）"><a href="#配置页面（快速布局）" class="headerlink" title="配置页面（快速布局）"></a><strong>配置页面（快速布局）</strong></h2><ul><li>添加页面标题</li></ul><p>页面标题的配置在.json文件中，打开about.json文件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "navigationBarTitleText": "此处添入标题名称",</span><br><span class="line">    "navigationBarBackgroundColor": "#fff",  // 此处添入颜色十六进制代码</span><br><span class="line">    "navigationBarTextStyle": "black"  // 此处添入标题样式 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>添加页面内容</li></ul><p>页面内容的配置在.wxml文件中，打开about.wxml文件，我们来实现一个简单的图文显示</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span> = <span class="string">'container'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span> = <span class="string">"/images/xxx.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>第一段文字<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>第二段文字<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>第三段文字<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>添加页面样式</li></ul><p>页面样式的配置在.wxss文件中，打开about.wxss文件，我们来实现一个简单的弹性盒子布局</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>至此，我们已经对新建的页面进行了最简单的配置。</li></ul><h2 id="页面样式配置方法（持续更新）"><a href="#页面样式配置方法（持续更新）" class="headerlink" title="页面样式配置方法（持续更新）"></a><strong>页面样式配置方法（持续更新）</strong></h2><h3 id="响应式长度单位rpx"><a href="#响应式长度单位rpx" class="headerlink" title="响应式长度单位rpx"></a>响应式长度单位rpx</h3><p>解决如何让元素大小适配不同宽度屏幕的问题。小程序规定所有设备的屏幕宽度均为750rpx，因此我们按照比例设置图片大小，即可在所有设备上得到同样的效果。</p><p>.wxml示例代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span> = <span class="string">'about-banner'</span> <span class="attr">src</span> = <span class="string">"/images/xxx.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure><p>.wxss示例代码如下：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.about-banner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">375</span>rpx;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">375</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置简单的页面跳转"><a href="#设置简单的页面跳转" class="headerlink" title="设置简单的页面跳转"></a>设置简单的页面跳转</h3><p>使用navigator组件可实现简单的页面跳转，我们新建一个home页面，经过上述过程简单配置后，我们想要实现从about页到home页的跳转。</p><p>about.wxml部分示例代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// 实际上以下内容在同一行显示</span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>我想跳转到<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">style</span> = <span class="string">'display: inline;'</span> <span class="attr">url</span> = <span class="string">'/pages/home/home'</span> <span class="attr">open-type</span> = <span class="string">"navigator"</span> <span class="attr">hover-class</span> = <span class="string">'nav-hover'</span> <span class="attr">class</span> = <span class="string">'nav-default'</span>&gt;</span>home<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span><span class="tag">&lt;<span class="name">text</span>&gt;</span>页面<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>about.wxss部分示例代码如下：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.nav-default</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav-hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意一定要将同行显示的文字置于view块内，navigator的style才能生效。</p></blockquote><blockquote><p>注意nav-default与nav-hover的顺序问题，</p></blockquote><h3 id="设置tabBar（标签栏）"><a href="#设置tabBar（标签栏）" class="headerlink" title="设置tabBar（标签栏）"></a>设置tabBar（标签栏）</h3><p>tabBar是对若干一级页面的入口链接，我们想要实现通过点击小程序底部的导航栏按钮来切换不同的一级页面。</p><p>app.json部分示例代码如下：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"tabBar"</span>: &#123;</span><br><span class="line">        <span class="attr">"list"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"text"</span>: <span class="string">"home"</span>,</span><br><span class="line">                <span class="attr">"pagePath"</span>: <span class="string">"pages/home/home"</span>,</span><br><span class="line">                <span class="attr">"iconPath"</span>: <span class="string">"images/icons/xxx.png"</span>,</span><br><span class="line">                <span class="attr">"selectedIconPath"</span>: <span class="string">"images/icons/xxx.png"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"text"</span>: <span class="string">"about"</span>,</span><br><span class="line">                <span class="attr">"pagePath"</span>: <span class="string">"pages/about/about"</span>,</span><br><span class="line">                <span class="attr">"iconPath"</span>: <span class="string">"images/icons/xxx.png"</span>,</span><br><span class="line">                <span class="attr">"selectedIconPath"</span>: <span class="string">"images/icons/xxx.png"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>但此时会导致我们上述简单跳转操作出错，原因是添加标签栏之后，我们期待的是跳转页面以及切换标签栏两个操作，通过将about.wxml中的navigator的open-type由navigator改为switchTab，可以解决这个问题。</p></blockquote><h3 id="统一顶部导航栏配置"><a href="#统一顶部导航栏配置" class="headerlink" title="统一顶部导航栏配置"></a>统一顶部导航栏配置</h3><p>一般我们的小程序每一个页面的顶部导航栏，都应该采用统一的样式，我们可以在app.json中对此进行配置。</p><p>app.json部分示例代码如下：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"window"</span>: &#123;</span><br><span class="line">        <span class="attr">"navigationBarBackgroundColor"</span>: <span class="string">"#fff"</span>,</span><br><span class="line">        <span class="attr">"navigationBarTextStyle"</span>: <span class="string">"black"</span>,</span><br><span class="line">        <span class="attr">"navigationBarText"</span>: <span class="string">"blank"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研帮app功能解析</title>
      <link href="/2020/04/11/kaoyanbang/"/>
      <url>/2020/04/11/kaoyanbang/</url>
      
        <content type="html"><![CDATA[<p>考研帮app —— 考研一站式移动学习平台，有超过200万2020届考研人在考研帮查信息、下资料、交研友、找学长、背单词、做真题、听课程。</p><h2 id="考研帮使用流程及功能"><a href="#考研帮使用流程及功能" class="headerlink" title="考研帮使用流程及功能"></a><strong>考研帮使用流程及功能</strong></h2><ul><li><h3 id="注册-登录"><a href="#注册-登录" class="headerlink" title="注册/登录"></a>注册/登录</h3></li></ul><p>考研帮app采用手机号注册/登录一体方式，用户输入手机号，接收验证码，已注册用户直接登录，未注册用户系统自动帮助注册，注册时仅需要填写昵称、考研时间及上传头像。</p><ul><li><h3 id="底部导航栏"><a href="#底部导航栏" class="headerlink" title="底部导航栏"></a><strong>底部导航栏</strong></h3></li></ul><ol><li><p>日历（即初始界面）</p></li><li><p>院校</p></li><li><p>社区</p></li><li><p>课程（付费）</p></li><li><p>我</p></li></ol><ul><li><h3 id="日历（初始界面）"><a href="#日历（初始界面）" class="headerlink" title="日历（初始界面）"></a><strong>日历（初始界面）</strong></h3></li></ul><ol><li><p>显示考研倒计时</p></li><li><p>打卡功能</p></li><li><p>每日一句功能</p></li><li><p>每日热点</p></li><li><p>今日任务（初始为空）</p></li><li><p>背单词（内置单词词库）</p></li><li><p>高分经验（付费）</p></li><li><p>研题库（初始为空）</p></li><li><p>研训</p></li><li><p>参考书</p></li><li><p>资料8折（付费）</p></li><li><p>初试估分</p></li><li><p>找学长（付费）</p></li></ol><h3 id="院校"><a href="#院校" class="headerlink" title="院校"></a><strong>院校</strong></h3><p><strong>以下为首次登录时操作步骤</strong></p><ol><li>填写目标专业和目标院校，填写信息包括专业分类、具体专业、学硕专硕、所在地区、毕业院校、目标院校地区与名称</li></ol><blockquote><p>注：目标院校可添加多所，目标专业只能添加一个</p></blockquote><ol start="2"><li><p>填写后上方显示目标专业排行第一的院校信息，中间显示“找学长”、“分数线”、“报录比”、“讨论组”、“知名导师”、“备考经验”，下方显示“学校论坛”、“院校资讯”、“招生信息”、“招生简章”、“专业目录”、“报录分析”、“复试调剂”、“专业目录”、“专业介绍”</p></li><li><p>界面右上角提供“院校对比”功能，可选择目标专业，添加多所目标院校进行比较</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 调查 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 调查 </tag>
            
            <tag> 参考资料 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论公式笔记（持续更新）</title>
      <link href="/2020/04/10/probability-note/"/>
      <url>/2020/04/10/probability-note/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a><strong>第一章</strong></h2><ul><li><h3 id="超几何分布概率公式"><a href="#超几何分布概率公式" class="headerlink" title="超几何分布概率公式"></a>超几何分布概率公式</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20224654.png"  alt=""></p><blockquote><p>N件产品，D件次品，任取n件，恰有k件次品的概率。</p></blockquote><ul><li><h3 id="组合数"><a href="#组合数" class="headerlink" title="组合数"></a>组合数</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20112625.png"  alt=""></p><ul><li><h3 id="条件概率"><a href="#条件概率" class="headerlink" title="条件概率"></a>条件概率</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20225516.png"  alt=""></p><ul><li><h3 id="乘法公式的推广"><a href="#乘法公式的推广" class="headerlink" title="乘法公式的推广"></a>乘法公式的推广</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20225800.png"  alt=""></p><ul><li><h3 id="全概率公式"><a href="#全概率公式" class="headerlink" title="全概率公式"></a>全概率公式</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20225933.png"  alt=""></p><ul><li><h3 id="贝叶斯公式"><a href="#贝叶斯公式" class="headerlink" title="贝叶斯公式"></a>贝叶斯公式</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20230038.png"  alt=""></p><ul><li><h3 id="独立性"><a href="#独立性" class="headerlink" title="独立性"></a>独立性</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20105723.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20110318.png"  alt=""></p><hr><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a><strong>第二章</strong></h2><ul><li><h3 id="分布律"><a href="#分布律" class="headerlink" title="分布律"></a>分布律</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20164641.png"  alt=""></p><ul><li><h3 id="0-—-1-分布"><a href="#0-—-1-分布" class="headerlink" title="(0 — 1)分布"></a>(0 — 1)分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20165205.png"  alt=""></p><ul><li><h3 id="伯努利分布"><a href="#伯努利分布" class="headerlink" title="伯努利分布"></a>伯努利分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20165715.png"  alt=""></p><ul><li><h3 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20165915.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20165957.png"  alt=""></p><ul><li><h3 id="泊松分布"><a href="#泊松分布" class="headerlink" title="泊松分布"></a>泊松分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20173901.png"  alt=""></p><ul><li><h3 id="泊松定理"><a href="#泊松定理" class="headerlink" title="泊松定理"></a>泊松定理</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20174751.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20175220.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20175315.png"  alt=""></p><ul><li><h3 id="分布函数"><a href="#分布函数" class="headerlink" title="分布函数"></a>分布函数</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20175948.png"  alt=""></p><ul><li><h3 id="连续型随机变量"><a href="#连续型随机变量" class="headerlink" title="连续型随机变量"></a>连续型随机变量</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-12%20181807.png"  alt=""></p><ul><li><h3 id="均匀分布"><a href="#均匀分布" class="headerlink" title="均匀分布"></a>均匀分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-16%20220540.png"  alt=""></p><ul><li><h3 id="指数分布"><a href="#指数分布" class="headerlink" title="指数分布"></a>指数分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-16%20221048.png"  alt=""></p><ul><li><h3 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-16%20221649.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-16%20222558.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-16%20223242.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-16%20223423.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-17%20095444.png"  alt=""></p><ul><li><h3 id="随机变量的函数的分布"><a href="#随机变量的函数的分布" class="headerlink" title="随机变量的函数的分布"></a>随机变量的函数的分布</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-20%20092005.png"  alt=""></p><hr><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a><strong>第三章</strong></h2><ul><li><h3 id="二维随机变量的分布函数"><a href="#二维随机变量的分布函数" class="headerlink" title="二维随机变量的分布函数"></a>二维随机变量的分布函数</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-20%20093417.png"  alt=""></p><ul><li><h3 id="二维随机变量概率密度"><a href="#二维随机变量概率密度" class="headerlink" title="二维随机变量概率密度"></a>二维随机变量概率密度</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-20%20093954.png"  alt=""></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-20%20094007.png"  alt=""></p><ul><li><h3 id="二维随机变量边缘概率密度"><a href="#二维随机变量边缘概率密度" class="headerlink" title="二维随机变量边缘概率密度"></a>二维随机变量边缘概率密度</h3></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-20%20095645.png"  alt=""></p><h2 id="—-gt-to-be-continued"><a href="#—-gt-to-be-continued" class="headerlink" title="—&gt; to be continued"></a>—&gt; to be continued</h2>]]></content>
      
      
      <categories>
          
          <category> 课程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个不会翻车的孜然炒菜配方</title>
      <link href="/2020/04/10/cuminRecipe/"/>
      <url>/2020/04/10/cuminRecipe/</url>
      
        <content type="html"><![CDATA[<p>孜然富含精油，气味芳香浓烈，被认为是继胡椒外世界第二重要的香料作物；孜然也有多种药用特性，能够理气开胃、祛寒除湿等 ，还具有抗过敏、抗氧化、抗血小板聚集和降血糖等保健功效。好的，那么今天我们来做孜然牛肉 ^_^</p><h2 id="用料"><a href="#用料" class="headerlink" title="用料"></a><strong>用料</strong></h2><ul><li><h3 id="食盐"><a href="#食盐" class="headerlink" title="食盐"></a>食盐</h3></li><li><h3 id="料酒"><a href="#料酒" class="headerlink" title="料酒"></a>料酒</h3></li><li><h3 id="孜然"><a href="#孜然" class="headerlink" title="孜然"></a>孜然</h3></li><li><h3 id="花椒"><a href="#花椒" class="headerlink" title="花椒"></a>花椒</h3></li><li><h3 id="杭椒"><a href="#杭椒" class="headerlink" title="杭椒"></a>杭椒</h3></li><li><h3 id="小米椒"><a href="#小米椒" class="headerlink" title="小米椒"></a>小米椒</h3></li><li><h3 id="辣椒粉"><a href="#辣椒粉" class="headerlink" title="辣椒粉"></a>辣椒粉</h3></li><li><h3 id="葱"><a href="#葱" class="headerlink" title="葱"></a>葱</h3></li><li><h3 id="姜"><a href="#姜" class="headerlink" title="姜"></a>姜</h3></li><li><h3 id="生抽"><a href="#生抽" class="headerlink" title="生抽"></a>生抽</h3></li><li><h3 id="食用油"><a href="#食用油" class="headerlink" title="食用油"></a>食用油</h3></li><li><h3 id="淀粉"><a href="#淀粉" class="headerlink" title="淀粉"></a>淀粉</h3></li><li><h3 id="牛肉"><a href="#牛肉" class="headerlink" title="牛肉"></a>牛肉</h3></li></ul><blockquote><p>关于调料的用量，后续会专门写一篇博客讲解，这里就不标注用量了。</p></blockquote><h2 id="用料注解"><a href="#用料注解" class="headerlink" title="用料注解"></a><strong>用料注解</strong></h2><ul><li><h3 id="料酒用来去除牛肉的膻味"><a href="#料酒用来去除牛肉的膻味" class="headerlink" title="料酒用来去除牛肉的膻味"></a>料酒用来去除牛肉的膻味</h3></li><li><h3 id="花椒这里采用的是花椒粒，当然也可以用花椒粉"><a href="#花椒这里采用的是花椒粒，当然也可以用花椒粉" class="headerlink" title="花椒这里采用的是花椒粒，当然也可以用花椒粉"></a>花椒这里采用的是花椒粒，当然也可以用花椒粉</h3></li><li><h3 id="杭椒和小米椒也可以用普通辣椒代替"><a href="#杭椒和小米椒也可以用普通辣椒代替" class="headerlink" title="杭椒和小米椒也可以用普通辣椒代替"></a>杭椒和小米椒也可以用普通辣椒代替</h3></li><li><h3 id="生抽就是家用酱油"><a href="#生抽就是家用酱油" class="headerlink" title="生抽就是家用酱油"></a>生抽就是家用酱油</h3></li></ul><blockquote><p>关于调料的功效，后续也会专门写一篇博客讲解，这里只列出一部分。</p></blockquote><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a><strong>准备</strong></h2><ol><li><p>视牛肉部位而定，如果牛肉本身筋比较多，不易炒烂，那么就先水煮半个小时到一个小时；否则，直接进行腌制步骤。</p></li><li><p>葱切段，杭椒小米椒切段，置于一个料碟中。</p></li><li><p>姜切末，置于一个料碟中。</p></li></ol><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a><strong>步骤</strong></h2><ul><li><h3 id="腌制"><a href="#腌制" class="headerlink" title="腌制"></a>腌制</h3></li></ul><p>将生牛肉或煮熟的牛肉置于盘中，加适量食盐、生抽、料酒，加切好的姜末，加淀粉，腌制十到二十分钟。</p><blockquote><p>腌制等待不是必须的，也可以加完料之后直接准备下锅，腌制是为了更入味。</p></blockquote><ul><li><h3 id="调底料"><a href="#调底料" class="headerlink" title="调底料"></a>调底料</h3></li></ul><p>空锅下入花椒粒和孜然，开小火，煸出香味即可，关火。向煸好的花椒粒和孜然中倒入铺满锅底的食用油（也可以少加一些油，减小油腻感），开大火，烧至锅中冒轻烟关火，期间用锅铲不断翻动花椒粒和孜然，避免糊锅。待油温稍凉，加入切好的葱段和杭椒小米椒，爆锅，开小火，烧至香味四溢。</p><ul><li><h3 id="炒牛肉"><a href="#炒牛肉" class="headerlink" title="炒牛肉"></a>炒牛肉</h3></li></ul><p>下入腌制好的牛肉，改大火快速翻炒，牛肉颜色均匀后加入辣椒粉（根据个人口味也可再添加少许食盐），继续翻炒至牛肉色泽呈熟状（或略黑），即可关火出锅。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a><strong>结语</strong></h2><p>这个配方不仅适用于炒牛肉，适当调整辣椒的比例，也可以用来做香辣土豆片等相关孜然菜系。</p><p>参考资料：<a href="https://baijiahao.baidu.com/s?id=1603992135987217878&wfr=spider&for=pc&isFailFlag=1" target="_blank" rel="noopener">孜然牛肉的做法</a></p>]]></content>
      
      
      <categories>
          
          <category> 美食 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美食 </tag>
            
            <tag> 做菜 </tag>
            
            <tag> 配方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开发微信小程序（一）</title>
      <link href="/2020/04/10/wechat1/"/>
      <url>/2020/04/10/wechat1/</url>
      
        <content type="html"><![CDATA[<p>小程序是一种新的开放能力，开发者可以快速地开发一个小程序。小程序可以在微信内被便捷地获取和传播，同时具有出色的使用体验。</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a><strong>流程</strong></h1><ul><li><h2 id="小程序的优势"><a href="#小程序的优势" class="headerlink" title="小程序的优势"></a><a href="#小程序的优势">小程序的优势</a></h2></li><li><h2 id="小程序开发工具"><a href="#小程序开发工具" class="headerlink" title="小程序开发工具"></a><a href="#小程序开发工具">小程序开发工具</a></h2></li><li><h2 id="基本目录文件结构配置"><a href="#基本目录文件结构配置" class="headerlink" title="基本目录文件结构配置"></a><a href="#基本目录文件结构配置">基本目录文件结构配置</a></h2></li></ul><h2 id="小程序的优势-1"><a href="#小程序的优势-1" class="headerlink" title="小程序的优势"></a><strong>小程序的优势</strong></h2><p>微信小程序是一种不需要下载安装即可使用的应用，它实现了应用“触手可及”的梦想，用户扫一扫或者搜一下即可打开应用。也体现了“用完即走”的理念，用户不用关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装卸载。对于开发者而言，微信小程序开发门槛相对较低，难度不及 APP，能够满足简单的基础应用，适合生活服务类线下商铺以及非刚需低频应用的转换。微信小程序能够实现消息通知、线下扫码、公众号关联等七大功能。</p><h2 id="小程序开发工具-1"><a href="#小程序开发工具-1" class="headerlink" title="小程序开发工具"></a><strong>小程序开发工具</strong></h2><p>首先，登录 <a href="https://mp.weixin.qq.com/cgi-bin/wx" target="_blank" rel="noopener">https://mp.weixin.qq.com/cgi-bin/wx</a> 注册小程序，填写注册信息注册成功后，点击图示按钮获取小程序ID (AppID)，</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20102714.png"  alt=""></p><p>之后下载<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">开发者工具</a>，至此，小程序开发的准备工作基本完成。</p><h2 id="基本目录文件结构配置-1"><a href="#基本目录文件结构配置-1" class="headerlink" title="基本目录文件结构配置"></a><strong>基本目录文件结构配置</strong></h2><p>打开微信开发者工具，在如下界面中：</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20103429.png"  alt=""></p><p>填写项目名称、目录等信息，AppID为注册小程序的AppID，新手开发可选择“不使用云服务”，语言选择Javascript，点击“新建”，进入到开发界面。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20103930.png"  alt=""></p><p>我们可以看到预置的界面效果，界面左侧是小程序代码的效果图，中间资源管理器是我们的代码文件区，右上方空白界面是代码界面，右下方可观测控制台输出等信息。</p><p>在资源管理器中，删除预置的pages文件夹（或清空文件夹里面的内容）和utils文件夹，</p><blockquote><p>其实是我还没弄明白这些预置的文件夹是做什么用的，反正新手最好还是尽量从零搭建</p></blockquote><p>接着清空app.js、app.json、app.wxss中的内容，你会看到控制台报错，</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://nandodu-blog.oss-cn-shanghai.aliyuncs.com/%E6%89%B9%E6%B3%A8%202020-04-10%20104613.png"  alt=""></p><p>但是没有关系，接下来的教程我将一步一步告诉你如何看懂并处理这些报错。至此，一个小程序的空白项目建立完毕。</p><p>—&gt; to be continued</p>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客的创建:hexo 从零开始到搭建完整</title>
      <link href="/2020/04/09/createHexo/"/>
      <url>/2020/04/09/createHexo/</url>
      
        <content type="html"><![CDATA[<p>这篇博客采用 github page 平台托管的方式，利用 hexo 作为一个快速简洁的博客框架，用它来从零搭建博客。</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a><strong>流程</strong></h1><ul><li><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a><a href="#安装Git">安装 Git</a></h2></li><li><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a><a href="#安装Node.js">安装 Node.js</a></h2></li><li><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a><a href="#安装Hexo">安装 Hexo</a></h2></li><li><h2 id="GitHub-创建个人仓库"><a href="#GitHub-创建个人仓库" class="headerlink" title="GitHub 创建个人仓库"></a><a href="#GitHub创建个人仓库">GitHub 创建个人仓库</a></h2></li><li><h2 id="将-hexo-部署到-GitHub"><a href="#将-hexo-部署到-GitHub" class="headerlink" title="将 hexo 部署到 GitHub"></a><a href="#将hexo部署到GitHub">将 hexo 部署到 GitHub</a></h2></li></ul><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a><strong>安装Git</strong></h2><p>windows : 到 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a> 官网上下载, 下载后会有一个 Git Bash 的命令行工具，以后就用这个工具来使用 git。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a><strong>安装Node.js</strong></h2><p>windows : <a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a> 选择 LTS 版本就行了。<br/><br>运行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>检查是否安装成功。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a><strong>安装Hexo</strong></h2><p>npm 在使用前最好先进行<a href="https://www.jianshu.com/p/4aaf929bfa71" target="_blank" rel="noopener">换源</a>。<br/><br>打开 cmd，输入命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>查看 hexo 是否安装成功。安装成功后，新建一个空文件夹 blog，并右键运行 Git Bash。</p><p>在 Git Bash 中输入命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>完成 hexo 的初始化。之后输入命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><p>输入命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>成功时应显示</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO Start processing</span><br><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;localhost4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>在浏览器中输入地址 <a href="http://localhost4000，即可看到" target="_blank" rel="noopener">http://localhost4000，即可看到</a> hexo 为我们默认生成的博客界面。浏览后，使用 ctrl+c 退出服务。</p><h2 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a><strong>GitHub创建个人仓库</strong></h2><p>首先，你先要有一个 GitHub 账户。</p><p>注册完登录后，在 GitHub.com 中看到一个 New repository，新建仓库</p><p>创建一个和你用户名相同的仓库，后面加 .github.io，只有这样，将来要部署到 GitHub page 的时候，才会被识别，也就是 xxxx.github.io，其中 xxx 就是你注册 GitHub 的用户名。</p><p>点击 create repository。</p><h2 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a><strong>将hexo部署到GitHub</strong></h2><p>安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后打开站点配置文件 _config.yml，翻到最后，修改为 YourgithubName，就是你的GitHub账户</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 hexo clean 清除了你之前生成的东西。</p><p>hexo generate 顾名思义，生成静态文章，可以用 hexo g 缩写。</p><p>hexo deploy 部署文章，可以用 hexo d 缩写</p><p>注意 deploy 时可能要你输入 username 和 password。</p><p>无报错，则表示部署成功，过一会儿就可以在 <a href="http://yourname.github.io" target="_blank" rel="noopener">http://yourname.github.io</a> 这个网站看到你的博客了！</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a><strong>结语</strong></h1><p>博客的创建到这里只是完成了小小的一步，后续的更换主题、注册域名都需要你在此教程基础上搜索相关内容进行配置，基础薄弱的人（比如我）一般需要耗费一下午甚至一晚上的时间，才能让自己的博客得以见人。我是 NandoDu，一个非技术宅，希望这篇教程可以帮到你。</p><p>资料来源：<a href="https://www.bilibili.com/video/BV1Yb411a7ty" target="_blank" rel="noopener">手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo</a>、<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 零基础教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 教程 </tag>
            
            <tag> 零基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/09/hello-world/"/>
      <url>/2020/04/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
